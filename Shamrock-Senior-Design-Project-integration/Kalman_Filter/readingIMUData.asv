% This function takes in data from the arduino + processes it:
% Takes in text file + outputs a matrix - one column is time stamp, 
% The other is the distance being read in by the lidar sensor:

% note that if NAN is displayed - the start message from the arduino is
% being sent // that's the beginning of data being aquired...

 function [time_array, final_array] = readingIMUData(filename)
    % read in the data
    %filename = 'run1_march18'
    f = fopen(filename);
    
    % throw an error if unopenable!
    if f < 0 
        error('Cannot open file'); 
    end
    
    % counter for current line number:
    count = 0;
    C = textscan(f, '%f');
    % while not the end of the file, keep reading: 
    while ~feof(f)
        tline = fgetl(f);

        minutes = str2double(tline(4:5));
        %minutes = str2double(minutes);
        seconds = str2double(tline(7:8));
        %seconds = str2double(seconds);
        mseconds = str2double(tline(9:12));
        %mseconds = str2double(mseconds);

        
        char = tline(21:end);
        char = regexprep(char, 'Y:', ' ');
        char = regexprep(char, 'Z:', ' ');
        accel_vec = sscanf(char,'%f');
        
%         accel_x = str2double(tline(22:27));
%         accel_y = str2double(tline(33:38));
%         % grab lidar measurements: 
%         accel_vec = [accel_x, accel_y];
        
        % grab the time in seconds: 
        time = (minutes*60) + (seconds) + (mseconds);
        
        count = count + 1;
        
        % lidar data:
        array(count,:) = accel_vec;
        
        % in seconds:
        time_array(count,1) = time;
    end
    
    final_array = array(1:end,2:3);
    offset_array = array(1:end,1);
    offset = (mean(offset_array)-9.8)/9.8;
    time_array = time_array(1:end,:);
    
    
    fclose(f);
    %array = array;
end